{"Action":{"Description":"Actions can be dynamically executed by specifying the Action keyword and / or Action parameters as expressions. This is even possible for those actions which inherently do not support expressions as its parameters.","Parameters":[{"Parameter Type":"Identifier","Is Constant":"Yes","Is Mandatory":"Yes","Dimension Expression":"No"},{"Parameter Type":"Keyword","Is Constant":"Yes","Is Mandatory":"No","Keyword Set":"TDL Actions","Keywords":"Accept Alter, Accept Create, Accept Object, Action, Add Sheet, Add Tile, Alter, Alter Collection, Alter Column, Alter Current Collection, Alter Current Report, Alter Ex, Alter Object, Alter Target, Append, Audit Form, Audit Object, Auto Columns, Autoform Report, Auto Set, Backup Company, Break, Browse Url, Browse Url Ex, Calculator, Call, Cancel, Cancel Object, Change Crypt Company, Change Output Mode, Change Table, Clear Table Stack, Close Company, Close Encrypted Target File, Close File, Close Target File, Configuration, Continue, Copy File, Copy To Clipboard, Copy Variable, Copy Variables, Create, Create Collection, Create Column, Create Ex, Create Target, Cycle Back, Decrement, Delete, Delete Column, Delete Config Data, Delete File, Delete Object, DisconnectUser, Display, Display Collection, Display Current Collection, Display Current Report, Display Ex, Display Help, Display Msg, Display Object, Do If, Dump Debug, Dump Profile, Dump Record, Dump Recording, Duplicate, Else, End Batch Post, End Block, End For, End If, End Msg, End Msg Box, End Progress, End Report, End Sub, End Unzip, End Walk, End While, End XSub, End Zip, Exchange, Exec COM Interface, Exec Command, Exec Command Ex, Exec Excel Macro, Execute, Execute Ex, Execute Obj Actions, ExecuteObjectMap, Execute TDL, Expand Tile, Explode, Export, Export Collection, Export Current Collection, Export Current Report, Export Report, Export Snapshot, Extract Path, Field Accept, Field Backspace, Field Blank, Field Char Delete, Field Char Delete Left, Field Char Left, Field Char NewLine, Field Char Right, Field Copy, Field Down, Field End, Field Erase, Field Home, Field Insert Mode, Field New Line, Field Next, Field Next Field SFD, Field Paste, Field Prev, Field Sub Form, Field Table Accept, Field Table Maximize, Field Table Mode, Field Toggle case, Field Undo, Field Up, Field Word Delete, Field Word Delete Left, Field Word Delete Right, Field Word Left, Field Word Right, Finalize ProgressBar, Focus Above Tile, F","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"Yes","Is Mandatory":"No","Dimension Expression":"No"}],"Meta":{"Aliases":"Action","Type":"Triple List","Is Discrete":"Yes"},"Name":"Action"},"Fetch Object":{"Description":"Enables Dynamic fetch of Objects at the function level.","Parameters":[{"Parameter Type":"Identifier","Is Constant":"Yes","Is Mandatory":"Yes","Refers To":"Object ","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"No","Is Mandatory":"Yes","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"Yes","Is Mandatory":"No","Dimension Expression":"No"}],"Meta":{"Aliases":"Fetch Object","Type":"Triple List","Is Discrete":"No"},"Name":"Fetch Object"},"List Var":{"Description":"This attribute is used to declare the List Variables at the function scope. We can have an inline declaration by additionally specifying the datatype and the count of elements in the list.","Parameters":[],"Meta":{"Aliases":"List Var, List Variable","Type":"Variable List"},"Name":"List Var"},"Local Formula":{"Description":"This is used to specify a local formula within the function block.","Parameters":[{"Parameter Type":"Identifier","Is Constant":"Yes","Is Mandatory":"Yes","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"No","Is Mandatory":"Yes","Dimension Expression":"No"}],"Meta":{"Aliases":"Local Formula","Type":"Dual List","Is Discrete":"Yes"},"Name":"Local Formula"},"Object":{"Description":"Function will inherit the Object context of the caller. This can be overridden by using the attribute Object for function definition. This now becomes the current object for the function.","Parameters":[{"Parameter Type":"Identifier","Is Constant":"Yes","Is Mandatory":"Yes","Refers To":"Object ","Is List":"No","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"No","Datatype":"String","Is Mandatory":"No","Is List":"No","Dimension Expression":"No"}],"Meta":{"Aliases":"Object, Objects","Type":"Dual"},"Name":"Object"},"Parameter":{"Description":"This attribute is used to specify the parameters which are passed to the function. This can be referred within the function as variables. It is possible to specify the DataType and a default value for the parameters. In case a default value is provided there is an option for the caller to skip the parameter value to be passed.","Parameters":[{"Parameter Type":"Identifier","Is Constant":"Yes","Is Mandatory":"Yes","Refers To":"Variable ","Dimension Expression":"No"},{"Parameter Type":"Keyword","Is Constant":"Yes","Is Mandatory":"Yes","Keyword Set":"Method","Keywords":"Aggregate, Amount, Date, DateTime, Due Date, Duration, FlagSet, Logical, Long, Number, NumSet, Quantity, Rate, Rate of Exchange, String, Sys Id, Time","Dimension Expression":"No"},{"Parameter Type":"Value","Is Constant":"No","Is Mandatory":"No","Dimension Expression":"No"}],"Meta":{"Aliases":"Parameter, Parameters","Type":"Triple List","Is Discrete":"Yes"},"Name":"Parameter"},"Return":{"Description":"This statement is used to return the flow of control to the calling program with or without returning a value. When return is used the execution of the function is terminated and the calling program continues from where it had called the function.","Parameters":[{"Parameter Type":"Keyword","Is Constant":"Yes","Is Mandatory":"Yes","Keyword Set":"Method","Keywords":"Aggregate, Amount, Date, DateTime, Due Date, Duration, FlagSet, Logical, Long, Number, NumSet, Quantity, Rate, Rate of Exchange, String, Sys Id, Time","Is List":"No","Dimension Expression":"No"}],"Meta":{"Aliases":"Return, Returns","Type":"Single"},"Name":"Return"},"Static Variable":{"Description":"This attribute is used to declare a Variable as Static.By doing so,the value is persisted between successive calls to a Function.","Parameters":[],"Meta":{"Aliases":"Static Variable","Type":"Variable List"},"Name":"Static Variable"},"Variable":{"Description":"This attribute is used to declare Simple Variables at the function scope.These are the variables which are used inside the function for some intermediate calculations.If the datatype is specified it is treated as inline.","Parameters":[],"Meta":{"Aliases":"Variable, Variables","Type":"Variable List"},"Name":"Variable"}}
